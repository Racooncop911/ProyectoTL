#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TLBD")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertTareas(Tareas instance);
    partial void UpdateTareas(Tareas instance);
    partial void DeleteTareas(Tareas instance);
    partial void InsertSesiones(Sesiones instance);
    partial void UpdateSesiones(Sesiones instance);
    partial void DeleteSesiones(Sesiones instance);
    partial void InsertPeriodos(Periodos instance);
    partial void UpdatePeriodos(Periodos instance);
    partial void DeletePeriodos(Periodos instance);
    partial void InsertMaterias(Materias instance);
    partial void UpdateMaterias(Materias instance);
    partial void DeleteMaterias(Materias instance);
    partial void InsertDocentes(Docentes instance);
    partial void UpdateDocentes(Docentes instance);
    partial void DeleteDocentes(Docentes instance);
    partial void InsertAlumnos(Alumnos instance);
    partial void UpdateAlumnos(Alumnos instance);
    partial void DeleteAlumnos(Alumnos instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TLBDConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tareas> Tareas
		{
			get
			{
				return this.GetTable<Tareas>();
			}
		}
		
		public System.Data.Linq.Table<Sesiones> Sesiones
		{
			get
			{
				return this.GetTable<Sesiones>();
			}
		}
		
		public System.Data.Linq.Table<Periodos> Periodos
		{
			get
			{
				return this.GetTable<Periodos>();
			}
		}
		
		public System.Data.Linq.Table<Materias> Materias
		{
			get
			{
				return this.GetTable<Materias>();
			}
		}
		
		public System.Data.Linq.Table<Docentes> Docentes
		{
			get
			{
				return this.GetTable<Docentes>();
			}
		}
		
		public System.Data.Linq.Table<Alumnos> Alumnos
		{
			get
			{
				return this.GetTable<Alumnos>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tareas")]
	public partial class Tareas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDTareas;
		
		private System.Nullable<long> _IDMat;
		
		private string _Titulo;
		
		private string _Descripcion;
		
		private System.Nullable<System.DateTime> _FechaEntrega;
		
		private EntityRef<Materias> _Materias;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTareasChanging(long value);
    partial void OnIDTareasChanged();
    partial void OnIDMatChanging(System.Nullable<long> value);
    partial void OnIDMatChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnFechaEntregaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaEntregaChanged();
    #endregion
		
		public Tareas()
		{
			this._Materias = default(EntityRef<Materias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTareas", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IDTareas
		{
			get
			{
				return this._IDTareas;
			}
			set
			{
				if ((this._IDTareas != value))
				{
					this.OnIDTareasChanging(value);
					this.SendPropertyChanging();
					this._IDTareas = value;
					this.SendPropertyChanged("IDTareas");
					this.OnIDTareasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMat", DbType="BigInt")]
		public System.Nullable<long> IDMat
		{
			get
			{
				return this._IDMat;
			}
			set
			{
				if ((this._IDMat != value))
				{
					if (this._Materias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMatChanging(value);
					this.SendPropertyChanging();
					this._IDMat = value;
					this.SendPropertyChanged("IDMat");
					this.OnIDMatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="NVarChar(80)")]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaEntrega", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaEntrega
		{
			get
			{
				return this._FechaEntrega;
			}
			set
			{
				if ((this._FechaEntrega != value))
				{
					this.OnFechaEntregaChanging(value);
					this.SendPropertyChanging();
					this._FechaEntrega = value;
					this.SendPropertyChanged("FechaEntrega");
					this.OnFechaEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materias_Tareas", Storage="_Materias", ThisKey="IDMat", OtherKey="IDMat", IsForeignKey=true)]
		public Materias Materias
		{
			get
			{
				return this._Materias.Entity;
			}
			set
			{
				Materias previousValue = this._Materias.Entity;
				if (((previousValue != value) 
							|| (this._Materias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Materias.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._Materias.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._IDMat = value.IDMat;
					}
					else
					{
						this._IDMat = default(Nullable<long>);
					}
					this.SendPropertyChanged("Materias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sesiones")]
	public partial class Sesiones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDSesion;
		
		private System.DateTime _Dia;
		
		private System.TimeSpan _Hora;
		
		private System.Nullable<long> _IDAlumno;
		
		private System.Nullable<long> _IDDoc;
		
		private System.Nullable<long> _IDMat;
		
		private string _Aula;
		
		private EntityRef<Materias> _Materias;
		
		private EntityRef<Docentes> _Docentes;
		
		private EntityRef<Alumnos> _Alumnos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSesionChanging(long value);
    partial void OnIDSesionChanged();
    partial void OnDiaChanging(System.DateTime value);
    partial void OnDiaChanged();
    partial void OnHoraChanging(System.TimeSpan value);
    partial void OnHoraChanged();
    partial void OnIDAlumnoChanging(System.Nullable<long> value);
    partial void OnIDAlumnoChanged();
    partial void OnIDDocChanging(System.Nullable<long> value);
    partial void OnIDDocChanged();
    partial void OnIDMatChanging(System.Nullable<long> value);
    partial void OnIDMatChanged();
    partial void OnAulaChanging(string value);
    partial void OnAulaChanged();
    #endregion
		
		public Sesiones()
		{
			this._Materias = default(EntityRef<Materias>);
			this._Docentes = default(EntityRef<Docentes>);
			this._Alumnos = default(EntityRef<Alumnos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSesion", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IDSesion
		{
			get
			{
				return this._IDSesion;
			}
			set
			{
				if ((this._IDSesion != value))
				{
					this.OnIDSesionChanging(value);
					this.SendPropertyChanging();
					this._IDSesion = value;
					this.SendPropertyChanged("IDSesion");
					this.OnIDSesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dia", DbType="Date NOT NULL")]
		public System.DateTime Dia
		{
			get
			{
				return this._Dia;
			}
			set
			{
				if ((this._Dia != value))
				{
					this.OnDiaChanging(value);
					this.SendPropertyChanging();
					this._Dia = value;
					this.SendPropertyChanged("Dia");
					this.OnDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hora", DbType="Time NOT NULL")]
		public System.TimeSpan Hora
		{
			get
			{
				return this._Hora;
			}
			set
			{
				if ((this._Hora != value))
				{
					this.OnHoraChanging(value);
					this.SendPropertyChanging();
					this._Hora = value;
					this.SendPropertyChanged("Hora");
					this.OnHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAlumno", DbType="BigInt")]
		public System.Nullable<long> IDAlumno
		{
			get
			{
				return this._IDAlumno;
			}
			set
			{
				if ((this._IDAlumno != value))
				{
					if (this._Alumnos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAlumnoChanging(value);
					this.SendPropertyChanging();
					this._IDAlumno = value;
					this.SendPropertyChanged("IDAlumno");
					this.OnIDAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDoc", DbType="BigInt")]
		public System.Nullable<long> IDDoc
		{
			get
			{
				return this._IDDoc;
			}
			set
			{
				if ((this._IDDoc != value))
				{
					if (this._Docentes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDocChanging(value);
					this.SendPropertyChanging();
					this._IDDoc = value;
					this.SendPropertyChanged("IDDoc");
					this.OnIDDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMat", DbType="BigInt")]
		public System.Nullable<long> IDMat
		{
			get
			{
				return this._IDMat;
			}
			set
			{
				if ((this._IDMat != value))
				{
					if (this._Materias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMatChanging(value);
					this.SendPropertyChanging();
					this._IDMat = value;
					this.SendPropertyChanged("IDMat");
					this.OnIDMatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aula", DbType="VarChar(4)")]
		public string Aula
		{
			get
			{
				return this._Aula;
			}
			set
			{
				if ((this._Aula != value))
				{
					this.OnAulaChanging(value);
					this.SendPropertyChanging();
					this._Aula = value;
					this.SendPropertyChanged("Aula");
					this.OnAulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materias_Sesiones", Storage="_Materias", ThisKey="IDMat", OtherKey="IDMat", IsForeignKey=true)]
		public Materias Materias
		{
			get
			{
				return this._Materias.Entity;
			}
			set
			{
				Materias previousValue = this._Materias.Entity;
				if (((previousValue != value) 
							|| (this._Materias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Materias.Entity = null;
						previousValue.Sesiones.Remove(this);
					}
					this._Materias.Entity = value;
					if ((value != null))
					{
						value.Sesiones.Add(this);
						this._IDMat = value.IDMat;
					}
					else
					{
						this._IDMat = default(Nullable<long>);
					}
					this.SendPropertyChanged("Materias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Docentes_Sesiones", Storage="_Docentes", ThisKey="IDDoc", OtherKey="IDDoc", IsForeignKey=true)]
		public Docentes Docentes
		{
			get
			{
				return this._Docentes.Entity;
			}
			set
			{
				Docentes previousValue = this._Docentes.Entity;
				if (((previousValue != value) 
							|| (this._Docentes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Docentes.Entity = null;
						previousValue.Sesiones.Remove(this);
					}
					this._Docentes.Entity = value;
					if ((value != null))
					{
						value.Sesiones.Add(this);
						this._IDDoc = value.IDDoc;
					}
					else
					{
						this._IDDoc = default(Nullable<long>);
					}
					this.SendPropertyChanged("Docentes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumnos_Sesiones", Storage="_Alumnos", ThisKey="IDAlumno", OtherKey="IDAlumno", IsForeignKey=true)]
		public Alumnos Alumnos
		{
			get
			{
				return this._Alumnos.Entity;
			}
			set
			{
				Alumnos previousValue = this._Alumnos.Entity;
				if (((previousValue != value) 
							|| (this._Alumnos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumnos.Entity = null;
						previousValue.Sesiones.Remove(this);
					}
					this._Alumnos.Entity = value;
					if ((value != null))
					{
						value.Sesiones.Add(this);
						this._IDAlumno = value.IDAlumno;
					}
					else
					{
						this._IDAlumno = default(Nullable<long>);
					}
					this.SendPropertyChanged("Alumnos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Periodos")]
	public partial class Periodos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDPeriodo;
		
		private System.DateTime _FechaInicio;
		
		private System.DateTime _FechaCierre;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPeriodoChanging(long value);
    partial void OnIDPeriodoChanged();
    partial void OnFechaInicioChanging(System.DateTime value);
    partial void OnFechaInicioChanged();
    partial void OnFechaCierreChanging(System.DateTime value);
    partial void OnFechaCierreChanged();
    #endregion
		
		public Periodos()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPeriodo", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IDPeriodo
		{
			get
			{
				return this._IDPeriodo;
			}
			set
			{
				if ((this._IDPeriodo != value))
				{
					this.OnIDPeriodoChanging(value);
					this.SendPropertyChanging();
					this._IDPeriodo = value;
					this.SendPropertyChanged("IDPeriodo");
					this.OnIDPeriodoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime NOT NULL")]
		public System.DateTime FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCierre", DbType="DateTime NOT NULL")]
		public System.DateTime FechaCierre
		{
			get
			{
				return this._FechaCierre;
			}
			set
			{
				if ((this._FechaCierre != value))
				{
					this.OnFechaCierreChanging(value);
					this.SendPropertyChanging();
					this._FechaCierre = value;
					this.SendPropertyChanged("FechaCierre");
					this.OnFechaCierreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materias")]
	public partial class Materias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDMat;
		
		private string _Clave;
		
		private int _Creditos;
		
		private string _Nombre;
		
		private EntitySet<Tareas> _Tareas;
		
		private EntitySet<Sesiones> _Sesiones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMatChanging(long value);
    partial void OnIDMatChanged();
    partial void OnClaveChanging(string value);
    partial void OnClaveChanged();
    partial void OnCreditosChanging(int value);
    partial void OnCreditosChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Materias()
		{
			this._Tareas = new EntitySet<Tareas>(new Action<Tareas>(this.attach_Tareas), new Action<Tareas>(this.detach_Tareas));
			this._Sesiones = new EntitySet<Sesiones>(new Action<Sesiones>(this.attach_Sesiones), new Action<Sesiones>(this.detach_Sesiones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMat", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IDMat
		{
			get
			{
				return this._IDMat;
			}
			set
			{
				if ((this._IDMat != value))
				{
					this.OnIDMatChanging(value);
					this.SendPropertyChanging();
					this._IDMat = value;
					this.SendPropertyChanged("IDMat");
					this.OnIDMatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clave", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Clave
		{
			get
			{
				return this._Clave;
			}
			set
			{
				if ((this._Clave != value))
				{
					this.OnClaveChanging(value);
					this.SendPropertyChanging();
					this._Clave = value;
					this.SendPropertyChanged("Clave");
					this.OnClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creditos", DbType="Int NOT NULL")]
		public int Creditos
		{
			get
			{
				return this._Creditos;
			}
			set
			{
				if ((this._Creditos != value))
				{
					this.OnCreditosChanging(value);
					this.SendPropertyChanging();
					this._Creditos = value;
					this.SendPropertyChanged("Creditos");
					this.OnCreditosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materias_Tareas", Storage="_Tareas", ThisKey="IDMat", OtherKey="IDMat")]
		public EntitySet<Tareas> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materias_Sesiones", Storage="_Sesiones", ThisKey="IDMat", OtherKey="IDMat")]
		public EntitySet<Sesiones> Sesiones
		{
			get
			{
				return this._Sesiones;
			}
			set
			{
				this._Sesiones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.Materias = this;
		}
		
		private void detach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.Materias = null;
		}
		
		private void attach_Sesiones(Sesiones entity)
		{
			this.SendPropertyChanging();
			entity.Materias = this;
		}
		
		private void detach_Sesiones(Sesiones entity)
		{
			this.SendPropertyChanging();
			entity.Materias = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Docentes")]
	public partial class Docentes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDDoc;
		
		private string _RFC;
		
		private string _DNombre;
		
		private string _DApPaterno;
		
		private string _DApMaterno;
		
		private EntitySet<Sesiones> _Sesiones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDocChanging(long value);
    partial void OnIDDocChanged();
    partial void OnRFCChanging(string value);
    partial void OnRFCChanged();
    partial void OnDNombreChanging(string value);
    partial void OnDNombreChanged();
    partial void OnDApPaternoChanging(string value);
    partial void OnDApPaternoChanged();
    partial void OnDApMaternoChanging(string value);
    partial void OnDApMaternoChanged();
    #endregion
		
		public Docentes()
		{
			this._Sesiones = new EntitySet<Sesiones>(new Action<Sesiones>(this.attach_Sesiones), new Action<Sesiones>(this.detach_Sesiones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDoc", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IDDoc
		{
			get
			{
				return this._IDDoc;
			}
			set
			{
				if ((this._IDDoc != value))
				{
					this.OnIDDocChanging(value);
					this.SendPropertyChanging();
					this._IDDoc = value;
					this.SendPropertyChanged("IDDoc");
					this.OnIDDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFC", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
		public string RFC
		{
			get
			{
				return this._RFC;
			}
			set
			{
				if ((this._RFC != value))
				{
					this.OnRFCChanging(value);
					this.SendPropertyChanging();
					this._RFC = value;
					this.SendPropertyChanged("RFC");
					this.OnRFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNombre", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string DNombre
		{
			get
			{
				return this._DNombre;
			}
			set
			{
				if ((this._DNombre != value))
				{
					this.OnDNombreChanging(value);
					this.SendPropertyChanging();
					this._DNombre = value;
					this.SendPropertyChanged("DNombre");
					this.OnDNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DApPaterno", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string DApPaterno
		{
			get
			{
				return this._DApPaterno;
			}
			set
			{
				if ((this._DApPaterno != value))
				{
					this.OnDApPaternoChanging(value);
					this.SendPropertyChanging();
					this._DApPaterno = value;
					this.SendPropertyChanged("DApPaterno");
					this.OnDApPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DApMaterno", DbType="NVarChar(60)")]
		public string DApMaterno
		{
			get
			{
				return this._DApMaterno;
			}
			set
			{
				if ((this._DApMaterno != value))
				{
					this.OnDApMaternoChanging(value);
					this.SendPropertyChanging();
					this._DApMaterno = value;
					this.SendPropertyChanged("DApMaterno");
					this.OnDApMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Docentes_Sesiones", Storage="_Sesiones", ThisKey="IDDoc", OtherKey="IDDoc")]
		public EntitySet<Sesiones> Sesiones
		{
			get
			{
				return this._Sesiones;
			}
			set
			{
				this._Sesiones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sesiones(Sesiones entity)
		{
			this.SendPropertyChanging();
			entity.Docentes = this;
		}
		
		private void detach_Sesiones(Sesiones entity)
		{
			this.SendPropertyChanging();
			entity.Docentes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alumnos")]
	public partial class Alumnos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDAlumno;
		
		private int _NoControl;
		
		private string _Nombre;
		
		private string _ApPaterno;
		
		private string _ApMaterno;
		
		private string _Carrera;
		
		private System.Nullable<decimal> _Telefono;
		
		private string _Correo;
		
		private EntitySet<Sesiones> _Sesiones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAlumnoChanging(long value);
    partial void OnIDAlumnoChanged();
    partial void OnNoControlChanging(int value);
    partial void OnNoControlChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApPaternoChanging(string value);
    partial void OnApPaternoChanged();
    partial void OnApMaternoChanging(string value);
    partial void OnApMaternoChanged();
    partial void OnCarreraChanging(string value);
    partial void OnCarreraChanged();
    partial void OnTelefonoChanging(System.Nullable<decimal> value);
    partial void OnTelefonoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    #endregion
		
		public Alumnos()
		{
			this._Sesiones = new EntitySet<Sesiones>(new Action<Sesiones>(this.attach_Sesiones), new Action<Sesiones>(this.detach_Sesiones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAlumno", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IDAlumno
		{
			get
			{
				return this._IDAlumno;
			}
			set
			{
				if ((this._IDAlumno != value))
				{
					this.OnIDAlumnoChanging(value);
					this.SendPropertyChanging();
					this._IDAlumno = value;
					this.SendPropertyChanged("IDAlumno");
					this.OnIDAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoControl", DbType="Int NOT NULL")]
		public int NoControl
		{
			get
			{
				return this._NoControl;
			}
			set
			{
				if ((this._NoControl != value))
				{
					this.OnNoControlChanging(value);
					this.SendPropertyChanging();
					this._NoControl = value;
					this.SendPropertyChanged("NoControl");
					this.OnNoControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApPaterno", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string ApPaterno
		{
			get
			{
				return this._ApPaterno;
			}
			set
			{
				if ((this._ApPaterno != value))
				{
					this.OnApPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApPaterno = value;
					this.SendPropertyChanged("ApPaterno");
					this.OnApPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApMaterno", DbType="NVarChar(60)")]
		public string ApMaterno
		{
			get
			{
				return this._ApMaterno;
			}
			set
			{
				if ((this._ApMaterno != value))
				{
					this.OnApMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApMaterno = value;
					this.SendPropertyChanged("ApMaterno");
					this.OnApMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carrera", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Carrera
		{
			get
			{
				return this._Carrera;
			}
			set
			{
				if ((this._Carrera != value))
				{
					this.OnCarreraChanging(value);
					this.SendPropertyChanging();
					this._Carrera = value;
					this.SendPropertyChanged("Carrera");
					this.OnCarreraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NVarChar(60)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumnos_Sesiones", Storage="_Sesiones", ThisKey="IDAlumno", OtherKey="IDAlumno")]
		public EntitySet<Sesiones> Sesiones
		{
			get
			{
				return this._Sesiones;
			}
			set
			{
				this._Sesiones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sesiones(Sesiones entity)
		{
			this.SendPropertyChanging();
			entity.Alumnos = this;
		}
		
		private void detach_Sesiones(Sesiones entity)
		{
			this.SendPropertyChanging();
			entity.Alumnos = null;
		}
	}
}
#pragma warning restore 1591
